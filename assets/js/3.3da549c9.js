(window.webpackJsonp=window.webpackJsonp||[]).push([[3],{171:function(t,e,n){"use strict";n.r(e);var s=n(0),i=Object(s.a)({},function(){var t=this,e=t.$createElement,n=t._self._c||e;return n("div",{staticClass:"content"},[t._m(0),t._v(" "),t._m(1),t._v(" "),t._m(2),t._v(" "),t._m(3),t._v(" "),n("p",[t._v("场景：希望将本地某个文件夹 push 到 github 上，做为一个project")]),t._v(" "),t._m(4),t._m(5),t._v(" "),n("p",[t._v("场景：将 github 上现有项目 clone下来")]),t._v(" "),t._m(6),t._v(" "),t._m(7),t._v(" "),n("p",[t._v("说明： 提交代码时所用的用户名和邮箱，便于小组协作。clone 下项目后首先要配置一下这个。")]),t._v(" "),t._m(8),t._m(9),t._v(" "),t._m(10),t._v(" "),t._m(11),t._v(" "),t._m(12),t._v(" "),t._m(13),t._v(" "),t._m(14),t._v(" "),t._m(15),t._v(" "),t._m(16),t._v(" "),t._m(17),t._v(" "),t._m(18),t._v(" "),t._m(19),t._v(" "),n("hr"),t._v(" "),t._m(20),t._v(" "),t._m(21),t._v(" "),t._m(22),t._m(23),t._v(" "),t._m(24),t._v(" "),t._m(25),t._v(" "),n("p",[t._v("或")]),t._v(" "),t._m(26),t._v(" "),t._m(27),n("hr"),t._v(" "),t._m(28),t._v(" "),t._m(29),t._v(" "),t._m(30),t._m(31),t._v(" "),t._m(32),t._m(33),t._v(" "),t._m(34),t._m(35),t._v(" "),t._m(36),t._m(37),t._v(" "),t._m(38),t._m(39),t._v(" "),t._m(40),t._m(41),t._v(" "),n("p",[t._v("场景：若想在本地，想看别人remote下的分支代码。比如想看他开发的功能怎么样，可以将它的分支映射到你的本地，前提是需要添加他的reomote。（所以有时候不向自己的remote push代码，而是直接向项目remote push代码，这样别人不用关联你的remote。这里还有 是向开源项目贡献代码还是以小组成员身份提交代码之分。）")]),t._v(" "),t._m(42),t._m(43),t._v(" "),t._m(44),t._m(45),t._v(" "),t._m(46),t._v(" "),t._m(47),t._v(" "),t._m(48),t._v(" "),t._m(49),t._v(" "),n("p",[t._v("场景：下方已经展示出不同的文件状态。不同情况下执行 git status 会看不到不同的文件状态。")]),t._v(" "),t._m(50),t._m(51),t._v(" "),t._m(52),t._m(53),t._v(" "),t._m(54),t._m(55),t._v(" "),t._m(56),t._m(57),t._v(" "),t._m(58),n("hr"),t._v(" "),t._m(59),n("hr"),t._v(" "),t._m(60),n("hr"),t._v(" "),t._m(61),t._m(62),t._v(" "),t._m(63),t._m(64),t._v(" "),t._m(65),t._m(66),t._v(" "),t._m(67),t._v(" "),t._m(68),t._m(69),t._v(" "),t._m(70),t._m(71),t._v(" "),t._m(72),t._m(73),t._v(" "),t._m(74),t._m(75),t._v(" "),t._m(76),t._m(77),t._v(" "),t._m(78),t._m(79),t._v(" "),t._m(80),t._m(81),t._v(" "),t._m(82),t._m(83),t._v(" "),t._m(84),t._m(85),t._v(" "),n("p",[t._v("说明：针对于一次功能，commit不宜过多，这是因为commit过多不宜回滚版本，一般 10个以内，之上已经算作一个很大的功能，所以有时候需要将多个commit合并为1个。")]),t._v(" "),t._m(86),t._m(87),t._m(88),t._v(" "),n("p",[t._v("场景：可以对比历史，来确定有没有预期之外的commit")]),t._v(" "),t._m(89),t._m(90),t._v(" "),t._m(91),t._v(" "),t._m(92),t._v(" "),t._m(93),t._m(94),t._m(95),t._v(" "),t._m(96),t._m(97),t._v(" "),n("p",[t._v("场景：当你在当前分支下正在开发某一功能，可能有些代码还未来得及提交，这时突然来了一个需求，需要切换到另外一个分支，进行改动，而当前分支的代码可以不用提交，储存起来，切换分支，当再回来时，再取出来。")]),t._v(" "),t._m(98),t._m(99),t._v(" "),n("p",[t._v("场景: 可查询某个文件,哪一行代码是谁写的,什么时候写的.")]),t._v(" "),t._m(100),t._m(101),t._v(" "),n("p",[t._v("场景: 修改已提交的 commit 信息")]),t._v(" "),t._m(102),n("p",[t._v("更多参考: "),n("a",{attrs:{href:"https://git-scm.com/book/zh/v2/Git-%E5%B7%A5%E5%85%B7-%E9%87%8D%E5%86%99%E5%8E%86%E5%8F%B2",target:"_blank",rel:"noopener noreferrer"}},[t._v("7.6 Git 工具 - 重写历史"),n("OutboundLink")],1)]),t._v(" "),t._m(103),t._v(" "),t._m(104),t._v(" "),t._m(105),t._m(106),t._v(" "),t._m(107),t._v(" "),t._m(108),n("p",[t._v("适用场景: 针对从未追踪的文件")]),t._v(" "),n("p",[t._v(".gitignore只能忽略那些原来没有被track的文件，如果某些文件已经被纳入了版本管理中，则修改.gitignore是无效的")]),t._v(" "),n("p",[t._v("参考:"),n("br"),t._v(" "),n("a",{attrs:{href:"https://zhuanlan.zhihu.com/p/102890728",target:"_blank",rel:"noopener noreferrer"}},[t._v("知乎"),n("OutboundLink")],1)]),t._v(" "),t._m(109),t._v(" "),t._m(110),n("p",[t._v("适用场景: 针对已追踪的文件, 会删除远端的对应文件")]),t._v(" "),n("p",[t._v("针对已追踪的文件 使用 「git rm --cached 文件」会将本地的文件删除并放入到暂存区, 同时未追踪的文件列表便会出现这个文件")]),t._v(" "),n("p",[t._v("这个会将远端的这个已追踪的文件删除掉, 因为要把它不纳入版本管理(不纳入版本管理的意思就是不在远端的文件夹中)")]),t._v(" "),t._m(111),t._v(" "),t._m(112),n("p",[t._v("适用场景: 针对已追踪的文件, 与远端相互不影响")]),t._v(" "),n("p",[t._v("比如本地的配置文件和线上的配置文件是不一样的，但是在项目开发中每次提交过程中忽略这些配置文件, 那么你这里就可以把不想提交的文件忽略。")]),t._v(" "),n("p",[t._v("参考:"),n("br"),t._v(" "),n("a",{attrs:{href:"https://www.cnblogs.com/wt645631686/p/10007328.html",target:"_blank",rel:"noopener noreferrer"}},[t._v("以上内容来自于本文"),n("OutboundLink")],1),n("br"),t._v(" "),n("a",{attrs:{href:"https://www.bookstack.cn/read/git-doc-zh/docs-80.md",target:"_blank",rel:"noopener noreferrer"}},[t._v("命令中文解释"),n("OutboundLink")],1)]),t._v(" "),t._m(113),t._v(" "),n("p",[t._v("这里面有讲rebase "),n("a",{attrs:{href:"https://mp.weixin.qq.com/s/Q2fLX27eb_fT3A84Pu1q1w",target:"_blank",rel:"noopener noreferrer"}},[t._v("我在工作中是如何使用Git的\n"),n("OutboundLink")],1)]),t._v(" "),n("p",[n("a",{attrs:{href:"https://mp.weixin.qq.com/s/zpAqx3MOa9qDX7cZxRE7Wg",target:"_blank",rel:"noopener noreferrer"}},[t._v("一份值得收藏的 Git 异常处理清单\n"),n("OutboundLink")],1)]),t._v(" "),n("p",[n("a",{attrs:{href:"https://mp.weixin.qq.com/s/CBCumHhwMxFUD3fJ4VzY_Q",target:"_blank",rel:"noopener noreferrer"}},[t._v("三年 Git 使用心得 & 常见问题整理"),n("OutboundLink")],1)]),t._v(" "),n("p",[n("a",{attrs:{href:"https://mp.weixin.qq.com/s/tV6so3KoVs8z5GCJ0Y5HSw",target:"_blank",rel:"noopener noreferrer"}},[t._v("收好这份 Git 应急手册，关键时刻可保你一命"),n("OutboundLink")],1)]),t._v(" "),n("p",[n("a",{attrs:{href:"https://mp.weixin.qq.com/s/cSaTdFfrc_u7YPmgFdYdAQ",target:"_blank",rel:"noopener noreferrer"}},[t._v("小姐姐用动图展示 10 个 Git 命令"),n("OutboundLink")],1)]),t._v(" "),n("p",[n("a",{attrs:{href:"https://mp.weixin.qq.com/s/8oWsj_ipp73crD_vg58LeQ",target:"_blank",rel:"noopener noreferrer"}},[t._v("你可能已经忽略的 git commit 规范\n"),n("OutboundLink")],1)]),t._v(" "),t._m(114),t._v(" "),t._m(115),t._v(" "),n("p",[t._v("注意：这些命令必须是英文输入法键入，不可以是中文输入法。")]),t._v(" "),t._m(116),t._v(" "),t._m(117),t._m(118),t._v(" "),t._m(119),t._m(120),t._m(121)])},[function(){var t=this.$createElement,e=this._self._c||t;return e("h1",{attrs:{id:"git常用命令"}},[e("a",{staticClass:"header-anchor",attrs:{href:"#git常用命令","aria-hidden":"true"}},[this._v("#")]),this._v(" git常用命令")])},function(){var t=this.$createElement,e=this._self._c||t;return e("h2",{attrs:{id:"获取git仓库"}},[e("a",{staticClass:"header-anchor",attrs:{href:"#获取git仓库","aria-hidden":"true"}},[this._v("#")]),this._v(" "),e("strong",[this._v("获取git仓库")])])},function(){var t=this.$createElement,e=this._self._c||t;return e("ul",[e("li",[this._v("在现有目录中初始化仓库 git init")]),this._v(" "),e("li",[this._v("克隆现有的仓库 git clone https://github.intra.douban.com/music/vfine.git")])])},function(){var t=this.$createElement,e=this._self._c||t;return e("h3",{attrs:{id:"git-init"}},[e("a",{staticClass:"header-anchor",attrs:{href:"#git-init","aria-hidden":"true"}},[this._v("#")]),this._v(" "),e("strong",[this._v("git init")])])},function(){var t=this.$createElement,e=this._self._c||t;return e("div",{staticClass:"language- extra-class"},[e("pre",{pre:!0,attrs:{class:"language-text"}},[e("code",[this._v('git init\ngit add README.md\ngit commit -m "first commit"\ngit remote add origin https://github.com/bo-bi/test.git\ngit push origin master\n')])])])},function(){var t=this.$createElement,e=this._self._c||t;return e("h3",{attrs:{id:"clone项目"}},[e("a",{staticClass:"header-anchor",attrs:{href:"#clone项目","aria-hidden":"true"}},[this._v("#")]),this._v(" "),e("strong",[this._v("clone项目")])])},function(){var t=this.$createElement,e=this._self._c||t;return e("pre",[e("code",[this._v("// Use HTTPS\ngit clone https://github.intra.douban.com/music/vfine.git\n")])])},function(){var t=this.$createElement,e=this._self._c||t;return e("h3",{attrs:{id:"配置本项目用户名和邮箱"}},[e("a",{staticClass:"header-anchor",attrs:{href:"#配置本项目用户名和邮箱","aria-hidden":"true"}},[this._v("#")]),this._v(" "),e("strong",[this._v("配置本项目用户名和邮箱")])])},function(){var t=this.$createElement,e=this._self._c||t;return e("div",{staticClass:"language- extra-class"},[e("pre",{pre:!0,attrs:{class:"language-text"}},[e("code",[this._v('// 查看config（重点看[user]）\ncat .git/config\n\n[core]\n\trepositoryformatversion = 0\n\tfilemode = true\n\tbare = false\n\tlogallrefupdates = true\n\tignorecase = true\n\tprecomposeunicode = true\n[user]\n\tname = fastclick\n\temail = fastclick@intern.douban.com\n[branch "pdf"]\n[remote "gitlab"]\n\turl = https://gitlab.com/vfine/vfine.git\n\tfetch = +refs/heads/*:refs/remotes/gitlab/*\n[branch "dev"]\n[branch "en_temp"]\n[remote "upstream"]\n\turl = https://gitlab.com/vfine/vfine.git\n\tfetch = +refs/heads/*:refs/remotes/upstream/*\n[remote "origin"]\n\turl = git@gitlab.com:bo-bi/vfine.git\n\tfetch = +refs/heads/*:refs/remotes/origin/*\n\n// 配置用户名和邮箱\n// 本项目\ngit config --local user.name "fastclick"\ngit config --local user.email "fastclick@intern.douban.com"\n\n// 配置全局 (所有项目不配置local，默认使用全局)\ngit config --global user.name "bo-bi"\ngit config --global user.email "18935445147@qq.com"\n')])])])},function(){var t=this.$createElement,e=this._self._c||t;return e("h2",{attrs:{id:"关联remote"}},[e("a",{staticClass:"header-anchor",attrs:{href:"#关联remote","aria-hidden":"true"}},[this._v("#")]),this._v(" "),e("strong",[this._v("关联remote")])])},function(){var t=this.$createElement,e=this._self._c||t;return e("p",[e("strong",[this._v("1.remote介绍")])])},function(){var t=this,e=t.$createElement,n=t._self._c||e;return n("blockquote",[n("p",[t._v("remote: 远端(源)，即clone地址 (https://github.intra.douban.com/music/vfine.git)"),n("br"),t._v("\n作用：可以从关联的remote处拉下代码到本地，也可以将本地代码提交到对应的remote处。")]),t._v(" "),n("blockquote",[n("p",[t._v("upstream: 项目远端(https://github.intra.douban.com/music/vfine.git)"),n("br"),t._v("origin: 自己远端 (https://github.intra.douban.com/fastclick/vfine.git)\n"),n("br"),t._v("gitlab: gitlab远端 (https://gitlab.com/vfine/vfine.git) ("),n("em",[t._v("其它远端参照此处")]),t._v(")")])])])},function(){var t=this.$createElement,e=this._self._c||t;return e("p",[e("strong",[this._v("2.查询本地已关联的remote")])])},function(){var t=this.$createElement,e=this._self._c||t;return e("pre",[e("code",[this._v("git remote -v\n// 打印如下(单个remote下，展示fetch 和 push 的源头)\ngitlab\thttps://gitlab.com/vfine/vfine.git (fetch)\ngitlab\thttps://gitlab.com/vfine/vfine.git (push)\norigin\thttps://github.intra.douban.com/fastclick/vfine.git (fetch)\norigin\thttps://github.intra.douban.com/fastclick/vfine.git (push)\nupstream\thttps://github.intra.douban.com/music/vfine.git (fetch)\nupstream\thttps://github.intra.douban.com/music/vfine.git (push)\n")])])},function(){var t=this.$createElement,e=this._self._c||t;return e("p",[e("strong",[this._v("3.添加remote")])])},function(){var t=this.$createElement,e=this._self._c||t;return e("pre",[e("code",[this._v("// git remote add name address\ngit remote add gitlab https://gitlab.com/vfine/vfine.git\n")])])},function(){var t=this.$createElement,e=this._self._c||t;return e("p",[e("strong",[this._v("4.删除remote")])])},function(){var t=this.$createElement,e=this._self._c||t;return e("pre",[e("code",[this._v("// git remote remove name\ngit remote remove gitlab\n")])])},function(){var t=this.$createElement,e=this._self._c||t;return e("p",[e("strong",[this._v("5.重命名remote")])])},function(){var t=this.$createElement,e=this._self._c||t;return e("pre",[e("code",[this._v("// git remote rename <oldName> <newName>\ngit remote rename origin originn\n")])])},function(){var t=this.$createElement,e=this._self._c||t;return e("p",[e("strong",[this._v("实际遇到的场景")])])},function(){var t=this.$createElement,e=this._self._c||t;return e("p",[e("strong",[this._v("场景一")]),this._v("：更改已有的remote，例如更换已有的命名为origin的remote（github地址 ---\x3e gitlab地址）")])},function(){var t=this.$createElement,e=this._self._c||t;return e("div",{staticClass:"language- extra-class"},[e("pre",{pre:!0,attrs:{class:"language-text"}},[e("code",[this._v("// 原来用的github\ngitlab\thttps://gitlab.com/vfine/vfine.git (fetch)\ngitlab\thttps://gitlab.com/vfine/vfine.git (push)\norigin\thttps://github.intra.douban.com/fastclick/vfine.git (fetch)\norigin\thttps://github.intra.douban.com/fastclick/vfine.git (push)\nupstream\thttps://github.intra.douban.com/music/vfine.git (fetch)\nupstream\thttps://github.intra.douban.com/music/vfine.git (push)\n")])])])},function(){var t=this.$createElement,e=this._self._c||t;return e("p",[this._v("现在迁移到了gitlab"),e("br"),this._v("\nTODO: "),e("br"),this._v("\n将 origin https://github.intra.douban.com/fastclick/vfine.git"),e("br"),this._v("\n换 origin https://gitlab.com/bo-bi/vfine.git")])},function(){var t=this.$createElement,e=this._self._c||t;return e("p",[this._v("步骤："),e("br")])},function(){var t=this.$createElement,e=this._self._c||t;return e("ol",[e("li",[this._v("删除remote origin")]),this._v(" "),e("li",[this._v("重新添加remote origin")])])},function(){var t=this.$createElement,e=this._self._c||t;return e("ol",[e("li",[this._v("rename要更改的remote")]),this._v(" "),e("li",[this._v("重新添加remote")]),this._v(" "),e("li",[this._v("移除rename的remote")])])},function(){var t=this.$createElement,e=this._self._c||t;return e("div",{staticClass:"language- extra-class"},[e("pre",{pre:!0,attrs:{class:"language-text"}},[e("code",[this._v("// 此处我将 HTTPS 更换为了 SSH (之前更改了公钥，误操作，fetch时 导致每次都要输入用户名、密码)\n1. git remote remove origin\n2. git remote add origin git@gitlab.com:bo-bi/vfine.git\n或\n1. git remote rename origin originn\n2. git remote add origin git@gitlab.com:bo-bi/vfine.git\n3. git remote remove originn\n\n// git remote -v\n// 更改后的remote\ngitlab\thttps://gitlab.com/vfine/vfine.git (fetch)\ngitlab\thttps://gitlab.com/vfine/vfine.git (push)\norigin\tgit@gitlab.com:bo-bi/vfine.git (fetch)\norigin\tgit@gitlab.com:bo-bi/vfine.git (push)\nupstream\thttps://github.intra.douban.com/music/vfine.git (fetch)\nupstream\thttps://github.intra.douban.com/music/vfine.git (push)\n")])])])},function(){var t=this.$createElement,e=this._self._c||t;return e("h2",{attrs:{id:"分支"}},[e("a",{staticClass:"header-anchor",attrs:{href:"#分支","aria-hidden":"true"}},[this._v("#")]),this._v(" "),e("strong",[this._v("分支")])])},function(){var t=this.$createElement,e=this._self._c||t;return e("p",[e("strong",[this._v("1.查看本地分支")])])},function(){var t=this.$createElement,e=this._self._c||t;return e("div",{staticClass:"language- extra-class"},[e("pre",{pre:!0,attrs:{class:"language-text"}},[e("code",[this._v("// 查看本地分支\ngit branch\n\n// 打印如下信息 * 为当前所在分支\n  add_income_type\n* dev\n  fix_bug\n  improve_UI\n  redeem_code\n  replace_chinese_hardcoded\n  test\n  ...\n")])])])},function(){var t=this.$createElement,e=this._self._c||t;return e("p",[e("strong",[this._v("2.查看所有分支")])])},function(){var t=this.$createElement,e=this._self._c||t;return e("div",{staticClass:"language- extra-class"},[e("pre",{pre:!0,attrs:{class:"language-text"}},[e("code",[this._v("// 查看所有分支\ngit branch --all\n\n// 打印如下信息\n\n// 会看到不同remote下存在的分支\n// 本地分支\n// remote  为github   下的分支\n// remote  为origin   下的分支\n// remote  为upstream 下的分支\n\n  add_income_type\n* dev\n  fix_bug\n  replace_chinese_hardcoded\n  search_prop_method\n  test\n  remotes/github/batch_authorize\n  remotes/github/dev\n  remotes/github/fix_bug\n  remotes/github/improve_UI\n  remotes/github/lixiaoxue/new_year_theme\n  remotes/github/master\n  remotes/origin/master\n  remotes/origin/vfine/new_ui\n  remotes/upstream/dev\n  remotes/upstream/master\n  remotes/upstream/tlongzou/add_news\n  remotes/upstream/vfine/new_ui\n")])])])},function(){var t=this.$createElement,e=this._self._c||t;return e("p",[e("strong",[this._v("3.删除本地分支")])])},function(){var t=this.$createElement,e=this._self._c||t;return e("div",{staticClass:"language- extra-class"},[e("pre",{pre:!0,attrs:{class:"language-text"}},[e("code",[this._v("// git branch -D name\ngit branch -D test\n\n")])])])},function(){var t=this.$createElement,e=this._self._c||t;return e("p",[e("strong",[this._v("4.删除远程分支")])])},function(){var t=this.$createElement,e=this._self._c||t;return e("div",{staticClass:"language- extra-class"},[e("pre",{pre:!0,attrs:{class:"language-text"}},[e("code",[this._v("// 删除remote名为 upstream 下的 en_temp 分支\n// git push <remote> :<branch> \ngit push upstream :en_temp\n")])])])},function(){var t=this.$createElement,e=this._self._c||t;return e("p",[e("strong",[this._v("5.切换分支")])])},function(){var t=this.$createElement,e=this._self._c||t;return e("div",{staticClass:"language- extra-class"},[e("pre",{pre:!0,attrs:{class:"language-text"}},[e("code",[this._v("// git checkout name\ngit checkout dev\n")])])])},function(){var t=this.$createElement,e=this._self._c||t;return e("p",[e("strong",[this._v("5.以dev分支为基准，创建分支并切换")])])},function(){var t=this.$createElement,e=this._self._c||t;return e("div",{staticClass:"language- extra-class"},[e("pre",{pre:!0,attrs:{class:"language-text"}},[e("code",[this._v("// 以dev分支，创建test分支，并切换到test分支\ngit checkout -b test\n")])])])},function(){var t=this.$createElement,e=this._self._c||t;return e("p",[e("strong",[this._v("6.以远端上的分支为基准，创建并切换")])])},function(){var t=this.$createElement,e=this._self._c||t;return e("div",{staticClass:"language- extra-class"},[e("pre",{pre:!0,attrs:{class:"language-text"}},[e("code",[this._v("// git checkout -b [分支名] [远端名]/[分支名]\ngit checkout dev upstream/dev\n\n// 意思为：将remote名为upstream下的dev分支，映射到本地dev分支(或者是其它的名字)。\n\n")])])])},function(){var t=this.$createElement,e=this._self._c||t;return e("p",[e("strong",[this._v("7.重命名本地分支")])])},function(){var t=this.$createElement,e=this._self._c||t;return e("div",{staticClass:"language- extra-class"},[e("pre",{pre:!0,attrs:{class:"language-text"}},[e("code",[this._v("// git branch -M <oldName> <newName>\ngit branch -M fix fixx\n\n// git branch\n* dev\n  fix_vip\n  fixx\n")])])])},function(){var t=this.$createElement,e=this._self._c||t;return e("p",[e("strong",[this._v("8.重命名远程分支")])])},function(){var t=this.$createElement,e=this._self._c||t;return e("ol",[e("li",[this._v("将要修改的分支映射到本地")]),this._v(" "),e("li",[this._v("在本地项目中重命名被映射后的分支")]),this._v(" "),e("li",[this._v("删除远程待修改的分支")]),this._v(" "),e("li",[this._v("将本地的新分支名 push到远程")])])},function(){var t=this.$createElement,e=this._self._c||t;return e("p",[this._v("或"),e("br"),this._v("\n有直接的命令，待补充")])},function(){var t=this.$createElement,e=this._self._c||t;return e("h2",{attrs:{id:"记录每次更新到仓库"}},[e("a",{staticClass:"header-anchor",attrs:{href:"#记录每次更新到仓库","aria-hidden":"true"}},[this._v("#")]),this._v(" "),e("strong",[this._v("记录每次更新到仓库")])])},function(){var t=this.$createElement,e=this._self._c||t;return e("p",[e("strong",[this._v("1.检查当前文件状态")])])},function(){var t=this.$createElement,e=this._self._c||t;return e("div",{staticClass:"language- extra-class"},[e("pre",{pre:!0,attrs:{class:"language-text"}},[e("code",[this._v("git status\n")])])])},function(){var t=this.$createElement,e=this._self._c||t;return e("ol",[e("li",[this._v("当前工作目录干净")])])},function(){var t=this.$createElement,e=this._self._c||t;return e("div",{staticClass:"language- extra-class"},[e("pre",{pre:!0,attrs:{class:"language-text"}},[e("code",[this._v("// 当没有 发生修改的文件 时\nOn branch test\nnothing to commit, working tree clean\n")])])])},function(){var t=this.$createElement,e=this._self._c||t;return e("ol",{attrs:{start:"2"}},[e("li",[this._v("有未跟踪的文件 (Untracked files)")])])},function(){var t=this.$createElement,e=this._self._c||t;return e("div",{staticClass:"language- extra-class"},[e("pre",{pre:!0,attrs:{class:"language-text"}},[e("code",[this._v('// 当 新增文件 test.md 后\n\nOn branch test\nUntracked files:\n  (use "git add <file>..." to include in what will be committed)\n\n\ttest.md\n\nnothing added to commit but untracked files present (use "git add" to track)\n\n// 未跟踪的文件意味着Git在之前的快照（提交）中没有这些文件；Git 不会自动将之纳入跟踪范围，因而不用担心把临时文件什么的也归入版本管理。\n')])])])},function(){var t=this.$createElement,e=this._self._c||t;return e("ol",{attrs:{start:"3"}},[e("li",[this._v("已暂存状态 (Changes to be committed)")])])},function(){var t=this.$createElement,e=this._self._c||t;return e("div",{staticClass:"language- extra-class"},[e("pre",{pre:!0,attrs:{class:"language-text"}},[e("code",[this._v('// 跟踪文件\ngit add test.md\n\n// git status 出现以下信息\nOn branch test\nChanges to be committed:\n  (use "git reset HEAD <file>..." to unstage)\n\n\tnew file:   test.md\n\n// 只要在 “Changes to be committed” 这行下面的，就说明是已暂存状态。如果此时提交，那么该文件此时此刻的版本将被留存在历史记录中。(只有已暂存起来的文件才可以进行提交!)\n\n// 取消暂存状态\ngit reset HEAD a.js\n')])])])},function(){var t=this.$createElement,e=this._self._c||t;return e("ol",{attrs:{start:"4"}},[e("li",[this._v("没有放到暂存区 (Changes not staged for commit)")])])},function(){var t=this.$createElement,e=this._self._c||t;return e("div",{staticClass:"language- extra-class"},[e("pre",{pre:!0,attrs:{class:"language-text"}},[e("code",[this._v('// 现在我们修改下之前已跟踪过的文件 HelpCenter.vue，然后再次运行 status 命令，会看到这样的状态报告：\n\nOn branch test\nChanges to be committed:\n  (use "git reset HEAD <file>..." to unstage)\n\n\tnew file:   test.md\n\nChanges not staged for commit:\n  (use "git add <file>..." to update what will be committed)\n  (use "git checkout -- <file>..." to discard changes in working directory)\n\n\tmodified:   src/views/HelpCenter.vue\n\n// 文件 HelpCenter.vue 出现在 “Changes not staged for commit” 这行下面，说明已跟踪文件的内容发生了变化，但还没有放到暂存区。要暂存这次更新，需要运行 git add 命令.\n')])])])},function(){var t=this.$createElement,e=this._self._c||t;return e("div",{staticClass:"language- extra-class"},[e("pre",{pre:!0,attrs:{class:"language-text"}},[e("code",[this._v('// git add src/views/HelpCenter.vue\n// git status 打印如下信息\n\nOn branch test\nChanges to be committed:\n  (use "git reset HEAD <file>..." to unstage)\n\n\tmodified:   src/views/HelpCenter.vue\n\tnew file:   test.md\n\n// 现在两个文件都已暂存，下次提交时就会一并记录到仓库。\n')])])])},function(){var t=this.$createElement,e=this._self._c||t;return e("div",{staticClass:"language- extra-class"},[e("pre",{pre:!0,attrs:{class:"language-text"}},[e("code",[this._v('// 假设此时，你想要在 HelpCenter.vue 里再加条注释，再运行 git status 看看：\n\nOn branch test\nChanges to be committed:\n  (use "git reset HEAD <file>..." to unstage)\n\n\tmodified:   src/views/HelpCenter.vue\n\tnew file:   test.md\n\nChanges not staged for commit:\n  (use "git add <file>..." to update what will be committed)\n  (use "git checkout -- <file>..." to discard changes in working directory)\n\n\tmodified:   src/views/HelpCenter.vue\n\n// HelpCenter.vue 文件竟然出现了两次，一次算未暂存，一次算已暂存\n// 实际上 Git 只不过暂存了你运行 git add 命令时的版本，如果现在提交，那么提交的是添加注释前的版本，而非当前工作目录中的版本。\n')])])])},function(){var t=this.$createElement,e=this._self._c||t;return e("div",{staticClass:"language- extra-class"},[e("pre",{pre:!0,attrs:{class:"language-text"}},[e("code",[this._v('// 运行了 git add 之后又作了修订的文件，需要重新运行 git add 把最新版本重新暂存起来。\n\n// git add src/views/HelpCenter.vue\n\nOn branch test\nChanges to be committed:\n  (use "git reset HEAD <file>..." to unstage)\n\n\tmodified:   src/views/HelpCenter.vue\n\tnew file:   test.md\n')])])])},function(){var t=this.$createElement,e=this._self._c||t;return e("p",[e("strong",[this._v("2.查看未暂存的文件修改内容")]),this._v(" "),e("br"),this._v("\n说明：此命令比较的是工作目录中当前文件和暂存区域快照之间的差异，也就是"),e("code",[this._v("修改之后还没有暂存起来的变化内容")]),this._v("。")])},function(){var t=this.$createElement,e=this._self._c||t;return e("div",{staticClass:"language- extra-class"},[e("pre",{pre:!0,attrs:{class:"language-text"}},[e("code",[this._v("// git status 查看文件状态 得知 HelpCenter.vue 文件未暂存\n// git diff src/views/HelpCenter.vue\n\ndiff --git a/src/views/HelpCenter.vue b/src/views/HelpCenter.vue\nindex 845995c..533ad5e 100644\n--- a/src/views/HelpCenter.vue\n+++ b/src/views/HelpCenter.vue\n@@ -1,6 +1,6 @@\n<template lang=\"pug\">\n .help-center\n-  //- h2\n+\n   h2 {{ $t('helpCenter') }}\n   .user-type\n     router-link.type(\n(END)\n\n// 可以看到修改的地方\n")])])])},function(){var t=this.$createElement,e=this._self._c||t;return e("p",[e("strong",[this._v("3.查看已暂存的文件修改内容")]),this._v(" "),e("br"),this._v("\n说明：此命令比较的是已经暂存起来的文件和上次提交时的快照之间的差异")])},function(){var t=this.$createElement,e=this._self._c||t;return e("div",{staticClass:"language- extra-class"},[e("pre",{pre:!0,attrs:{class:"language-text"}},[e("code",[this._v("// 两种方式\n// git diff --cached\n// git diff --staged\n\ngit diff --cached src/views/HelpCenter.vue\n// 同上，会将修改的地方标注出来\n\n// 若此时用 git diff src/views/HelpCenter.vue 来查看已暂存的文件，会发现什么内容都没有，因为 git diff 不过是显示还没有暂存起来的改动，而不是这次工作和上次提交之间的差异。\n")])])])},function(){var t=this.$createElement,e=this._self._c||t;return e("p",[e("strong",[this._v("4.将有修改的文件放入暂存区，等待提交")]),this._v(" "),e("br"),this._v(" "),e("br"),this._v("\ngit add 作用如下：")])},function(){var t=this.$createElement,e=this._self._c||t;return e("ol",[e("li",[this._v("跟踪新文件")]),this._v(" "),e("li",[this._v("把已跟踪的文件放入暂存区域 (add file into staged area)")]),this._v(" "),e("li",[this._v("合并时把有冲突的文件标记为已解决状态(如 rebase时)")])])},function(){var t=this.$createElement,e=this._self._c||t;return e("div",{staticClass:"language- extra-class"},[e("pre",{pre:!0,attrs:{class:"language-text"}},[e("code",[this._v("// git add 文件/目录路径\n\n// 1.单个跟踪文件\ngit add test.md\n\n// 2.批量跟踪文件 (带git diff 功能)\n场景：当有多个文件发生改变时，又需要审查每一个文件的改变，此时批量跟踪文件会变得十分有用，不再需要一个一个文件 git diff 再 git add。只需要执行git add -p，会将你的修改结果一个一个呈现，针对每一个修改结果，输入y/n，来决定是否将此改变进行缓存。\n\ngit add -p\n")])])])},function(){var t=this.$createElement,e=this._self._c||t;return e("p",[e("strong",[this._v("5.提交更新")])])},function(){var t=this.$createElement,e=this._self._c||t;return e("div",{staticClass:"language- extra-class"},[e("pre",{pre:!0,attrs:{class:"language-text"}},[e("code",[this._v('1. git status 无误后\n\n2. git commit -m "\bmessage..."\n\n3. git push origin test (或其他remote branch)\n')])])])},function(){var t=this.$createElement,e=this._self._c||t;return e("p",[e("strong",[this._v("6.让git忽略某些文件")]),this._v(" "),e("br"),this._v("\n说明：一般我们总会有些文件无需纳入 Git 的管理，也不希望它们总出现在未跟踪文件列表。这时可以创建一个名为 .gitignore 的文件，列出要忽略的文件格式。")])},function(){var t=this.$createElement,e=this._self._c||t;return e("div",{staticClass:"language- extra-class"},[e("pre",{pre:!0,attrs:{class:"language-text"}},[e("code",[this._v("// 忽略规则\n# 此为注释 – 将被 Git 忽略\n# 忽略所有 .a 结尾的文件\n*.a\n# 但 lib.a 除外\n!lib.a\n# 仅仅忽略项目根目录下的 TODO 文件，不包括 subdir/TODO\n/TODO\n# 忽略 build/ 目录下的所有文件\nbuild/\n# 会忽略 doc/notes.txt 但不包括 doc/server/arch.txt\ndoc/*.txt\n# 忽略 doc/ 目录下所有扩展名为 txt 的文件\ndoc/**/*.txt\n\n\n\n// 以下为 vfine 项目中 .gitignore 的文件内容\n.DS_Store\nnode_modules/\ndist/\nnpm-debug.log*\nyarn-debug.log*\nyarn-error.log*\n\n# Editor directories and files\n.idea\n.vscode\n.history\n*.suo\n*.ntvs*\n*.njsproj\n*.sln\n\n")])])])},function(){var t=this.$createElement,e=this._self._c||t;return e("h2",{attrs:{id:"更新所有"}},[e("a",{staticClass:"header-anchor",attrs:{href:"#更新所有","aria-hidden":"true"}},[this._v("#")]),this._v(" "),e("strong",[this._v("更新所有")])])},function(){var t=this.$createElement,e=this._self._c||t;return e("div",{staticClass:"language- extra-class"},[e("pre",{pre:!0,attrs:{class:"language-text"}},[e("code",[this._v("// 一般我会这么做\ngit fetch --all\ngit rebase upstream/dev\n\n// 首先更新所有remote下的分支及代码\n// 再将upstream下的dev分支拉到本地当前分支 (或者是其他remote下的其他分支)\n\n// 还有另外一种方式\ngit pull origin dev\n")])])])},function(){var t=this.$createElement,e=this._self._c||t;return e("h2",{attrs:{id:"解决冲突-git-rebase"}},[e("a",{staticClass:"header-anchor",attrs:{href:"#解决冲突-git-rebase","aria-hidden":"true"}},[this._v("#")]),this._v(" "),e("strong",[this._v("解决冲突 git rebase")])])},function(){var t=this.$createElement,e=this._self._c||t;return e("div",{staticClass:"language- extra-class"},[e("pre",{pre:!0,attrs:{class:"language-text"}},[e("code",[this._v('git fetch --all\ngit rebase upstream/dev\n\n// 打印如下\nFirst, rewinding head to replay your work on top of it...\nApplying: Add judgment on limitless package in DownloadVipMusicDialog.vue.\nUsing index info to reconstruct a base tree...\nM\tsrc/components/DownloadVipMusicDialog.vue\nM\tsrc/store/getters.coffee\nFalling back to patching base and 3-way merge...\nAuto-merging src/components/DownloadVipMusicDialog.vue\nCONFLICT (content): Merge conflict in src/components/DownloadVipMusicDialog.vue\nerror: Failed to merge in the changes.\nPatch failed at 0001 Add judgment on limitless package in DownloadVipMusicDialog.vue.\nThe copy of the patch that failed is found in: .git/rebase-apply/patch\n\nWhen you have resolved this problem, run "git rebase --continue".\nIf you prefer to skip this patch, run "git rebase --skip" instead.\nTo check out the original branch and stop rebasing, run "git rebase --abort".\n\n// 当前左侧箭头显示如下，说明当前进入解决冲突过程中\n/myDocument/vfine/vfine-fork/vfine  ➦ 34ce9e8 ●✚ >R>\n\n// 相关命令\n// git rebase --abort 中止解决冲突过程，回到rebase之前的状态\n// git rebase --skip 跳过此条commit对比\n// git rebase --continue 继续对比下一个commit (解决冲突的过程为一个commit一个commit进行对比，直到没有冲突为止)\n')])])])},function(){var t=this.$createElement,e=this._self._c||t;return e("p",[e("strong",[this._v("解决冲突的步骤：")]),this._v(" "),e("br"),this._v(" "),e("strong",[this._v("1. 去项目中找到这两个文件，并解决冲突")])])},function(){var t=this.$createElement,e=this._self._c||t;return e("div",{staticClass:"language- extra-class"},[e("pre",{pre:!0,attrs:{class:"language-text"}},[e("code",[this._v("M\tsrc/components/DownloadVipMusicDialog.vue\nM\tsrc/store/getters.coffee\n\n从以上可以看出这两个文件有冲突\n\n   getters.coffee 没有冲突内容\n\n   DownloadVipMusicDialog.vue 有冲突内容，如下显示\n\n<<<<<<< HEAD\n    p {{ $t('thisAudioAlreadyAddAuthCode') }}\n=======\n    p(v-if=\"!music.vip_used\") {{ $t('thisAudioAlreadyAddAuthCode') }}\n>>>>>>> Add judgment on limitless package in DownloadVipMusicDialog.vue.\n      span.link(@click=\"showVipAuthDialog\") {{ $t('unlockNow') }}\n\n\n// <<<<<<< HEAD    自己commit的内容    =======\n// =======         是拉下的内容        >>>>>>>\n\n// 选择要留下的内容，删除掉 <<<<<<<、=======、>>>>>>>这类特殊符号\n\n// 解决冲突后，如下\np {{ $t('thisAudioAlreadyAddAuthCode') }}\n  span.link(@click=\"showVipAuthDialog\") {{ $t('unlockNow') }}\n")])])])},function(){var t=this.$createElement,e=this._self._c||t;return e("p",[e("strong",[this._v("2. 将冲突的文件标记为已解决状态，完成此次commit对比")])])},function(){var t=this.$createElement,e=this._self._c||t;return e("div",{staticClass:"language- extra-class"},[e("pre",{pre:!0,attrs:{class:"language-text"}},[e("code",[this._v("git status\ngit diff src/components/DownloadVipMusicDialog.vue\ngit add src/components/DownloadVipMusicDialog.vue\ngit status 再次查看文件状态\n")])])])},function(){var t=this.$createElement,e=this._self._c||t;return e("p",[e("strong",[this._v("3. 继续对比下一个commit")])])},function(){var t=this.$createElement,e=this._self._c||t;return e("div",{staticClass:"language- extra-class"},[e("pre",{pre:!0,attrs:{class:"language-text"}},[e("code",[this._v("git rebase --continue\n\n重复以上步骤：\n1. 解决冲突\n2. 将冲突的文件标记为已解决状态，完成此次commit对比\n3. git rebase --continue\n4. 直到对比完会退出来这个过程，左侧箭头恢复  /myDocument/vfine/vfine-fork/vfine   test\n")])])])},function(){var t=this.$createElement,e=this._self._c||t;return e("p",[e("strong",[this._v("4. 提交解决完冲突后的commit")])])},function(){var t=this.$createElement,e=this._self._c||t;return e("div",{staticClass:"language- extra-class"},[e("pre",{pre:!0,attrs:{class:"language-text"}},[e("code",[this._v("git push origin test \n// 你会发现这样做，会报错，推不上去，是因为：解决完冲突后的commit，已经不是原来的commit, 比如 commit 1 -> commit 1',\n所以无法正常push， 应该加 -f 强行push\n\ngit push origin test -f\n")])])])},function(){var t=this.$createElement,e=this._self._c||t;return e("h2",{attrs:{id:"合并commit-git-rebase"}},[e("a",{staticClass:"header-anchor",attrs:{href:"#合并commit-git-rebase","aria-hidden":"true"}},[this._v("#")]),this._v(" "),e("strong",[this._v("合并commit git rebase")])])},function(){var t=this.$createElement,e=this._self._c||t;return e("div",{staticClass:"language- extra-class"},[e("pre",{pre:!0,attrs:{class:"language-text"}},[e("code",[this._v("// 查看提交历史\ngit log\n\n// 打印如下\ncommit b6478a536251d3e265731faf150c56ffffed0ba3 (HEAD -> test)\nAuthor: fastclick <fastclick@intern.douban.com>\nDate:   Fri Mar 15 11:52:50 2019 +0800\n\n    Second commit for rebase.\n\ncommit 1c669b5fdfdca2b4be2df6d80e989ff5de26469a\nAuthor: fastclick <fastclick@intern.douban.com>\nDate:   Fri Mar 15 11:52:03 2019 +0800\n\n    First commit for rebase.\n\ncommit 814350626c743f209c7f289df0e6d5669759e269\nAuthor: fastclick <fastclick@intern.douban.com>\nDate:   Fri Mar 15 11:14:44 2019 +0800\n\n    hahaha2\n\n// 合并方式\n\n// 1.选择合并前两个\ngit rebase -i HEAD^^ (git rebase -i HEAD~2)\n\n// 2.选取一个坐标，不包括本身，合并之前的\ngit rebase -i 8143506\n")])])])},function(){var t=this.$createElement,e=this._self._c||t;return e("div",{staticClass:"language- extra-class"},[e("pre",{pre:!0,attrs:{class:"language-text"}},[e("code",[this._v("// 合并步骤：\n\n1.git rebase -i HEAD^^\n\n2.出现vim，内容如下\npick 1c669b5 First commit for rebase.\npick b6478a5 Second commit for rebase.\n\n# Rebase 8143506..b6478a5 onto 8143506 (2 commands)\n\n// ① 合并commit，是从下往上合并commit\n// ② pick 改为 squash / s\n// ③ esc + :wq 保存并退出\n\n// 改为如下\npick 1c669b5 First commit for rebase.\ns    b6478a5 Second commit for rebase.\n\n3.若没有冲突，继续出现vim\n# This is a combination of 2 commits.\n# This is the 1st commit message:\n\nFirst commit for rebase.\n\n# This is the commit message #2:\n\nSecond commit for rebase.\n\n// 从以上可以看出这两条commit的信息，更改信息，或者是留下其中一条，然后保存退出。\n\n// 相关操作\n// 输入 i 进入编辑状态\n// 点击 esc 退出编辑状态\n// 在不是编辑状态下，连按两次dd，删除行\n// esc + :wq 保存并退出\n\n// 改为如下\n# This is a combination of 2 commits.\n# This is the 1st commit message:\n\nRebase the first and second commit.\n\n# This is the commit message #2:\n\n4. git log\n\ncommit 9f27f93f9dd73e5ee9cccc88b7e5839ed1dc0695 (HEAD -> test)\nAuthor: fastclick <fastclick@intern.douban.com>\nDate:   Fri Mar 15 11:52:03 2019 +0800\n\n    Rebase the first and second commit.\n")])])])},function(){var t=this.$createElement,e=this._self._c||t;return e("h2",{attrs:{id:"查看commit历史"}},[e("a",{staticClass:"header-anchor",attrs:{href:"#查看commit历史","aria-hidden":"true"}},[this._v("#")]),this._v(" "),e("strong",[this._v("查看commit历史")])])},function(){var t=this.$createElement,e=this._self._c||t;return e("div",{staticClass:"language- extra-class"},[e("pre",{pre:!0,attrs:{class:"language-text"}},[e("code",[this._v("// 查看当前分支\ngit log\n\n// 查看 upstream 远端下的 dev 分支\ngit log upstream/dev\n")])])])},function(){var t=this.$createElement,e=this._self._c||t;return e("h2",{attrs:{id:"撤回commit"}},[e("a",{staticClass:"header-anchor",attrs:{href:"#撤回commit","aria-hidden":"true"}},[this._v("#")]),this._v(" "),e("strong",[this._v("撤回commit")])])},function(){var t=this.$createElement,e=this._self._c||t;return e("h2",{attrs:{id:"回滚代码到某个commit"}},[e("a",{staticClass:"header-anchor",attrs:{href:"#回滚代码到某个commit","aria-hidden":"true"}},[this._v("#")]),this._v(" "),e("strong",[this._v("回滚代码到某个commit")])])},function(){var t=this.$createElement,e=this._self._c||t;return e("ul",[e("li",[this._v("git reset --hard hash")]),this._v(" "),e("li",[this._v("github / gitlab PR页面，点击 revert 按钮，创建revert PR，再merge revert PR")])])},function(){var t=this.$createElement,e=this._self._c||t;return e("div",{staticClass:"language- extra-class"},[e("pre",{pre:!0,attrs:{class:"language-text"}},[e("code",[this._v("// git log\n\ncommit 9f27f93f9dd73e5ee9cccc88b7e5839ed1dc0695 (HEAD -> test)\nAuthor: fastclick <fastclick@intern.douban.com>\nDate:   Fri Mar 15 11:52:03 2019 +0800\n\n    Rebase the first and second commit.\n\ncommit 814350626c743f209c7f289df0e6d5669759e269\nAuthor: fastclick <fastclick@intern.douban.com>\nDate:   Fri Mar 15 11:14:44 2019 +0800\n\n    hahaha2\n\ncommit f9ae709e225ee988a62163eb281013a7cb554149\nAuthor: fastclick <fastclick@intern.douban.com>\nDate:   Fri Mar 15 11:06:38 2019 +0800\n\n    hahaha\n\ncommit 0dc9dcfdb99e6c70c32764703245b881580c39d7\nAuthor: fastclick <fastclick@intern.douban.com>\nDate:   Thu Mar 14 15:39:00 2019 +0800\n\n    test\n\ncommit 6e9603e36424f919162feaaa8581a9f160ed54a1\nAuthor: fastclick <fastclick@intern.douban.com>\nDate:   Wed Mar 13 17:38:16 2019 +0800\n\n    Hidden sub account surDplus.\n")])])])},function(){var t=this.$createElement,e=this._self._c||t;return e("div",{staticClass:"language- extra-class"},[e("pre",{pre:!0,attrs:{class:"language-text"}},[e("code",[this._v("// 我想将代码回滚到 Hidden sub account surDplus.\n\n// git reset --hard hash\ngit reset --hard 6e9603e36\n\n//出现如下信息\nHEAD is now at 6e9603e Hidden sub account surDplus.\n\n// git log\ncommit 6e9603e36424f919162feaaa8581a9f160ed54a1 (HEAD -> test)\nAuthor: fastclick <fastclick@intern.douban.com>\nDate:   Wed Mar 13 17:38:16 2019 +0800\n\n    Hidden sub account surDplus.\n\ncommit b5815e0791c398f91f56fe75cc66f1545164901a\nAuthor: fastclick <fastclick@intern.douban.com>\nDate:   Wed Mar 13 15:47:55 2019 +0800\n\n    Fix bug about count display error in package detail dialog.\n\n// 回滚成功\n")])])])},function(){var t=this.$createElement,e=this._self._c||t;return e("h2",{attrs:{id:"取下某个commit到本地"}},[e("a",{staticClass:"header-anchor",attrs:{href:"#取下某个commit到本地","aria-hidden":"true"}},[this._v("#")]),this._v(" "),e("strong",[this._v("取下某个commit到本地")])])},function(){var t=this.$createElement,e=this._self._c||t;return e("div",{staticClass:"language- extra-class"},[e("pre",{pre:!0,attrs:{class:"language-text"}},[e("code",[this._v("// 1.获取想取的commit的哈希值\ngit cherry-pick hash\n")])])])},function(){var t=this.$createElement,e=this._self._c||t;return e("h2",{attrs:{id:"储藏"}},[e("a",{staticClass:"header-anchor",attrs:{href:"#储藏","aria-hidden":"true"}},[this._v("#")]),this._v(" 储藏")])},function(){var t=this.$createElement,e=this._self._c||t;return e("div",{staticClass:"language- extra-class"},[e("pre",{pre:!0,attrs:{class:"language-text"}},[e("code",[this._v("// 储存\ngit stash\n\n// 取出\ngit stash pop\n\n// 储存列表\ngit stash list\n\n// 可以根据ID取对应的储存部分\n")])])])},function(){var t=this.$createElement,e=this._self._c||t;return e("h2",{attrs:{id:"追责"}},[e("a",{staticClass:"header-anchor",attrs:{href:"#追责","aria-hidden":"true"}},[this._v("#")]),this._v(" 追责")])},function(){var t=this.$createElement,e=this._self._c||t;return e("div",{staticClass:"language- extra-class"},[e("pre",{pre:!0,attrs:{class:"language-text"}},[e("code",[this._v("// git blame 文件\ngit blame  src/views/Home.vue\n")])])])},function(){var t=this.$createElement,e=this._self._c||t;return e("h2",{attrs:{id:"重写历史"}},[e("a",{staticClass:"header-anchor",attrs:{href:"#重写历史","aria-hidden":"true"}},[this._v("#")]),this._v(" 重写历史")])},function(){var t=this.$createElement,e=this._self._c||t;return e("div",{staticClass:"language- extra-class"},[e("pre",{pre:!0,attrs:{class:"language-text"}},[e("code",[this._v("// 修改最近一条 commit 信息\ngit commit --amend\n")])])])},function(){var t=this.$createElement,e=this._self._c||t;return e("h2",{attrs:{id:"将文件还原"}},[e("a",{staticClass:"header-anchor",attrs:{href:"#将文件还原","aria-hidden":"true"}},[this._v("#")]),this._v(" 将文件还原")])},function(){var t=this.$createElement,e=this._self._c||t;return e("p",[this._v("场景1: 某个文件可能进行了代码更改, 查看变化, 用完后要进行代码还原"),e("br"),this._v("\n场景2: 若将文件删除, 使用此命令可以将文件还原")])},function(){var t=this.$createElement,e=this._self._c||t;return e("div",{staticClass:"language- extra-class"},[e("pre",{pre:!0,attrs:{class:"language-text"}},[e("code",[this._v("git checkout -- package-lock.json\n")])])])},function(){var t=this.$createElement,e=this._self._c||t;return e("h2",{attrs:{id:"取消跟踪"}},[e("a",{staticClass:"header-anchor",attrs:{href:"#取消跟踪","aria-hidden":"true"}},[this._v("#")]),this._v(" 取消跟踪")])},function(){var t=this.$createElement,e=this._self._c||t;return e("ol",[e("li",[this._v("添加 .gitignore 文件")])])},function(){var t=this.$createElement,e=this._self._c||t;return e("div",{staticClass:"language- extra-class"},[e("pre",{pre:!0,attrs:{class:"language-text"}},[e("code",[this._v("dev/\nnode_modules/\n.vscode\ndist/node_raw/\n\n")])])])},function(){var t=this.$createElement,e=this._self._c||t;return e("ol",{attrs:{start:"2"}},[e("li",[this._v("git rm")])])},function(){var t=this.$createElement,e=this._self._c||t;return e("div",{staticClass:"language- extra-class"},[e("pre",{pre:!0,attrs:{class:"language-text"}},[e("code",[this._v("// 取消跟踪文件\ngit rm --cached a.js\n\n// 取消跟踪文件夹 加 -r(这么做会递归 rm 文件夹下的每一个文件)\ngit rm -r --cached dist\n\n// 取消跟踪文件并且删除(需要文件未发生改动, 以下命令执行才会成功)\ngit rm a.js\n")])])])},function(){var t=this.$createElement,e=this._self._c||t;return e("ol",{attrs:{start:"3"}},[e("li",[this._v("git update-index --assume-unchanged xxx")])])},function(){var t=this.$createElement,e=this._self._c||t;return e("div",{staticClass:"language- extra-class"},[e("pre",{pre:!0,attrs:{class:"language-text"}},[e("code",[this._v("// 忽略 a.js\ngit update-index --assume-unchanged a.js\n\n// 恢复跟踪\ngit update-index --no-assume-unchanged a.js\n\n// 查看忽略列表\ngit ls-files -v | grep '^h\\ '\n\n// 查看忽略文件路径\ngit ls-files -v | grep '^h\\ ' | awk '{print $2}'\n\n// 取消所有忽略的文件\ngit ls-files -v | grep '^h' | awk '{print $2}' | xargs git update-index --no-assume-unchanged  \n")])])])},function(){var t=this.$createElement,e=this._self._c||t;return e("h2",{attrs:{id:"可以学习的文章来自于微信公众号收藏"}},[e("a",{staticClass:"header-anchor",attrs:{href:"#可以学习的文章来自于微信公众号收藏","aria-hidden":"true"}},[this._v("#")]),this._v(" 可以学习的文章来自于微信公众号收藏")])},function(){var t=this.$createElement,e=this._self._c||t;return e("h1",{attrs:{id:"其它操作"}},[e("a",{staticClass:"header-anchor",attrs:{href:"#其它操作","aria-hidden":"true"}},[this._v("#")]),this._v(" 其它操作")])},function(){var t=this.$createElement,e=this._self._c||t;return e("h2",{attrs:{id:"vim基础操作"}},[e("a",{staticClass:"header-anchor",attrs:{href:"#vim基础操作","aria-hidden":"true"}},[this._v("#")]),this._v(" "),e("strong",[this._v("vim基础操作")])])},function(){var t=this.$createElement,e=this._self._c||t;return e("p",[e("strong",[this._v("1.创建文件")])])},function(){var t=this.$createElement,e=this._self._c||t;return e("div",{staticClass:"language- extra-class"},[e("pre",{pre:!0,attrs:{class:"language-text"}},[e("code",[this._v("vim test.js\n")])])])},function(){var t=this.$createElement,e=this._self._c||t;return e("p",[e("strong",[this._v("2.基础操作")])])},function(){var t=this.$createElement,e=this._self._c||t;return e("div",{staticClass:"language- extra-class"},[e("pre",{pre:!0,attrs:{class:"language-text"}},[e("code",[this._v("1.键入 i 进入插入模式 (即编辑模式)\n  -- INSERT -- \n\n2.按 esc 退出编辑 ---\x3e 在 不是插入模式 下，才可进行以下操作\n\n  退出:\n      :wq 保存并退出\n      :q  退出不保存\n      (若不能正常退出，后面加! 如 !wq q!)\n\n\n  删除\n      dd 删除一整行\n      x  删除 (delete mac /Backspace win 只能向左推动光标)\n\n  撤销\n      u 相当于 ctrl + z\n\n  移动光标\n      fn + <- (方向键) 移动到行头\n      fn + -> (方向键) 移动到行尾\n\n  选中可视块\n      fn + v + <- / ->\n\n  复制\n      y 复制选中内容\n\n  粘贴 \n      p 粘贴    \n")])])])},function(){var t=this.$createElement,e=this._self._c||t;return e("div",{staticClass:"language- extra-class"},[e("pre",{pre:!0,attrs:{class:"language-text"}},[e("code",[this._v("// 查看当前文件夹下有什么文件\nls -a\n\n.                   .DS_Store           .gitignore          deploy.sh           node_modules        working-git-command\n..                  .git                .history            docs                package.json        yarn.lock\n\n// 进入某一位置 (tab可自动联想和查询)\ncd /personal/travel\n\n// 用vscode打开项目 (code 路径)\ncode /blog/working-git-command\n\n// 重新开一个命令行，不需要将之前已经输入的删去\n// 退出服务\ncontrol(^) + c \n\n// 新建文件夹\nmkdir speak\n")])])])},function(){var t=this.$createElement,e=this._self._c||t;return e("div",{staticClass:"language- extra-class"},[e("pre",{pre:!0,attrs:{class:"language-text"}},[e("code",[this._v("history\n场景：可以在终端上，无论是本地还是在服务器上，输入history，可以看到之前输入的命令历史，这有助于你不知道有些命令输什么，可以看之前别人输入的命令进行输入。\n")])])])}],!1,null,null,null);e.default=i.exports}}]);